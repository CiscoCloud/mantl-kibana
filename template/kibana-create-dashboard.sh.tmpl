set -xe

# set kibana_url
{{range $idx, $service := service (env "KIBANA_SERVICE") "any" -}}
{{if eq $idx 0}}
kibana_url="http://{{.Address}}:{{.Port}}"
{{end}}
{{else -}}
exit 0
{{- end}}

# set elasticsearch_url
{{$es := service (env "ELASTICSEARCH_SERVICE" "any")}}{{with $es -}}
{{range $idx, $service := $es}}{{if eq $idx 0}}
elasticsearch_url="http://{{.Address}}:{{.Port}}"
{{- end}}{{end}}{{end}}

kibana_status() {
    curl --silent --insecure --retry 2 --connect-timeout 5 --max-time 5 $kibana_url/api/status | jq -r .status.overall.state
}

# wait until kibana is healthy
ATTEMPT=0
until [ _$(kibana_status) == "_green" ] || [ $ATTEMPT -eq 30 ]; do
    echo "waiting for Kibana to become healthy..."
    echo "attempt: $(( ATTEMPT++ ))"
    sleep 10
done

if [ $ATTEMPT -ge 30 ]; then
    echo "Timed out before Kibana became healthy."
    exit 0
fi

# create logstash index pattern and set default index if it does not already exist
if [ _$(curl -s "$kibana_url/elasticsearch/.kibana/index-pattern/logstash-*" | jq .found) != "_true" ]; then
    curl -s -XPOST -H 'kbn-version: {{env "KIBANA_IMAGE_TAG"}}' $kibana_url/elasticsearch/.kibana/index-pattern/logstash-*?op_type=create -d '{"title":"logstash-*","timeFieldName":"@timestamp"}'

    # update default index
    curl -s -XPOST -H 'kbn-version: {{env "KIBANA_IMAGE_TAG"}}' $kibana_url/elasticsearch/.kibana/config/{{env "KIBANA_IMAGE_TAG"}}/_update -d '{"doc":{"buildNum":{{env "KIBANA_BUILD_NUM"}},"defaultIndex":"logstash-*"}}'
fi

# update dashboard mapping
curl -s -XPUT "$elasticsearch_url/.kibana/_mapping/dashboard" -d '{"properties":{"description":{"type":"string"},"hits":{"type":"integer"},"kibanaSavedObjectMeta":{"properties":{"searchSourceJSON":{"type":"string"}}},"optionsJSON":{"type":"string"},"panelsJSON":{"type":"string"},"timeFrom":{"type":"string"},"timeRestore":{"type":"boolean"},"timeTo":{"type":"string"},"title":{"type":"string"},"uiStateJSON":{"type":"string"},"version":{"type":"integer"}}}'

# create date-histogram visualization if it does not already exist
if [ _$(curl -s "$elasticsearch_url/.kibana/visualization/date-histogram" | jq .found) != "_true" ]; then
    curl -s -XPUT "$elasticsearch_url/.kibana/visualization/date-histogram/_create" -d '{"title":"date-histogram","visState":"{\"type\":\"histogram\",\"params\":{\"shareYAxis\":true,\"addTooltip\":true,\"addLegend\":true,\"scale\":\"linear\",\"mode\":\"stacked\",\"times\":[],\"addTimeMarker\":false,\"defaultYExtents\":false,\"setYExtents\":false,\"yAxis\":{}},\"aggs\":[{\"id\":\"1\",\"type\":\"count\",\"schema\":\"metric\",\"params\":{}},{\"id\":\"2\",\"type\":\"date_histogram\",\"schema\":\"segment\",\"params\":{\"field\":\"@timestamp\",\"interval\":\"auto\",\"customInterval\":\"2h\",\"min_doc_count\":1,\"extended_bounds\":{}}}],\"listeners\":{}}","uiStateJSON":"{}","description":"","version":1,"kibanaSavedObjectMeta":{"searchSourceJSON":"{\"index\":\"logstash-*\",\"query\":{\"query_string\":{\"query\":\"*\",\"analyze_wildcard\":true}},\"filter\":[]}"}}'
fi

# create log-types visualization if it does not already exist
if [ _$(curl -s "$elasticsearch_url/.kibana/visualization/log-types" | jq .found) != "_true" ]; then
    curl -s -XPUT "$elasticsearch_url/.kibana/visualization/log-types/_create" -d '{"title":"log-types","visState":"{\"type\":\"pie\",\"params\":{\"shareYAxis\":true,\"addTooltip\":true,\"addLegend\":true,\"isDonut\":false},\"aggs\":[{\"id\":\"1\",\"type\":\"count\",\"schema\":\"metric\",\"params\":{}},{\"id\":\"2\",\"type\":\"filters\",\"schema\":\"segment\",\"params\":{\"filters\":[{\"input\":{\"query\":{\"query_string\":{\"query\":\"INFO\",\"analyze_wildcard\":true}}},\"label\":\"\"},{\"input\":{\"query\":{\"query_string\":{\"query\":\"WARN\",\"analyze_wildcard\":true}}}},{\"input\":{\"query\":{\"query_string\":{\"query\":\"ERROR\",\"analyze_wildcard\":true}}}},{\"input\":{\"query\":{\"query_string\":{\"query\":\"DEBUG\",\"analyze_wildcard\":true}}}}]}}],\"listeners\":{}}","uiStateJSON":"{}","description":"","version":1,"kibanaSavedObjectMeta":{"searchSourceJSON":"{\"index\":\"logstash-*\",\"query\":{\"query_string\":{\"query\":\"*\",\"analyze_wildcard\":true}},\"filter\":[]}"}}'
fi

# create total-docs visualization if it does not already exist
if [ _$(curl -s "$elasticsearch_url/.kibana/visualization/total-docs" | jq .found) != "_true" ]; then
    curl -s -XPUT "$elasticsearch_url/.kibana/visualization/total-docs/_create" -d '{"title":"total-docs","visState":"{\"type\":\"metric\",\"params\":{\"fontSize\":60},\"aggs\":[{\"id\":\"1\",\"type\":\"count\",\"schema\":\"metric\",\"params\":{}}],\"listeners\":{}}","uiStateJSON":"{}","description":"","version":1,"kibanaSavedObjectMeta":{"searchSourceJSON":"{\"index\":\"logstash-*\",\"query\":{\"query_string\":{\"query\":\"*\",\"analyze_wildcard\":true}},\"filter\":[]}"}}'
fi

# create log-source visualization if it does not already exist
if [ _$(curl -s "$elasticsearch_url/.kibana/visualization/log-source" | jq .found) != "_true" ]; then
    curl -s -XPUT "$elasticsearch_url/.kibana/visualization/log-source/_create" -d '{"title":"log-source","visState":"{\"type\":\"pie\",\"params\":{\"shareYAxis\":true,\"addTooltip\":true,\"addLegend\":true,\"isDonut\":false},\"aggs\":[{\"id\":\"1\",\"type\":\"count\",\"schema\":\"metric\",\"params\":{}},{\"id\":\"2\",\"type\":\"filters\",\"schema\":\"segment\",\"params\":{\"filters\":[{\"input\":{\"query\":{\"query_string\":{\"query\":\"elasticsearch\",\"analyze_wildcard\":true}}},\"label\":\"\"},{\"input\":{\"query\":{\"query_string\":{\"query\":\"logstash\",\"analyze_wildcard\":true}}}},{\"input\":{\"query\":{\"query_string\":{\"query\":\"kibana\",\"analyze_wildcard\":true}}}},{\"input\":{\"query\":{\"query_string\":{\"query\":\"mesos\",\"analyze_wildcard\":true}}}}]}}],\"listeners\":{}}","uiStateJSON":"{}","description":"","version":1,"kibanaSavedObjectMeta":{"searchSourceJSON":"{\"index\":\"logstash-*\",\"query\":{\"query_string\":{\"query\":\"*\",\"analyze_wildcard\":true}},\"filter\":[]}"}}'
fi

# create default dashboard if it does not already exist
if [ _$(curl -s "$elasticsearch_url/.kibana/dashboard/default" | jq .found) != "_true" ]; then
    curl -s -XPUT "$elasticsearch_url/.kibana/dashboard/default/_create" -d '{"title":"default","hits":0,"description":"","panelsJSON":"[{\"col\":1,\"id\":\"date-histogram\",\"panelIndex\":1,\"row\":1,\"size_x\":12,\"size_y\":4,\"type\":\"visualization\"},{\"col\":1,\"id\":\"log-source\",\"panelIndex\":2,\"row\":5,\"size_x\":4,\"size_y\":5,\"type\":\"visualization\"},{\"col\":5,\"id\":\"log-types\",\"panelIndex\":3,\"row\":5,\"size_x\":5,\"size_y\":5,\"type\":\"visualization\"},{\"col\":10,\"id\":\"total-docs\",\"panelIndex\":4,\"row\":5,\"size_x\":3,\"size_y\":2,\"type\":\"visualization\"}]","optionsJSON":"{\"darkTheme\":false}","uiStateJSON":"{}","version":1,"timeRestore":true,"timeTo":"now","timeFrom":"now-4h","kibanaSavedObjectMeta":{"searchSourceJSON":"{\"filter\":[{\"query\":{\"query_string\":{\"analyze_wildcard\":true,\"query\":\"*\"}}}]}"}}'
fi
